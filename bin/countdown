#!/usr/bin/perl

my $do_notify = 1;
$| = 1;

our $orig_time = parse_time(shift @ARGV)
	or die "no time argument";
our $time = $orig_time;

our $thresh_warn = 2 * 60;
our $thresh_urg  = 15;


sub parse_time {
	my ($h, $m, $s);

	if (!defined($_[0]) || $_[0] eq '') {
		return undef
	} elsif ($_[0] =~ m/^\s*(?:(?:(\d+):)?(\d+):)?(\d+)\s*$/) {
		($h, $m, $s) = ($1//0, $2//0, $3//0)
	} elsif ($_[0] =~ m/(?=.*?(\d+)\s*[Hh])?(?=.*?(\d+)\s*[Mm])?(?=.*?(\d+)\s*[Ss])?(?=.*?(\d+)$)?/) {
		($h, $m, $s) = ($1//0, $2//0, $3//0);
		if (!$s && $4) { $s = $4 }
		elsif ($s && $4) { die "invalid format: $_[0]" }
	} else {
		die "invalid format: $_[0]"
	}

	return ($s + 60*$m + 3600*$h)
}

sub format_time {
	my ($f, $t) = ('', shift @_);
	if ($t >= 3600) {
		$f .= (int $t / 3600) . "h";
		$t %= 3600;
	}
	if ($t >= 60) {
		$f .= (int $t / 60) . "m";
		$t %= 60;
	}
	if ($t > 0) {
		$f .= (int $t) . "s";
	}
	$f
}

sub format_countdown {
	sprintf "\r %02d:%02d:%02d ",
		($_[0] / 3600),
		($_[0] % 3600) / 60,
		($_[0] % 60)
}

sub color {
	my $time = $_[0];
	if ($time <= 0) {
		return "[1;37m"
	} elsif ($time <= $thresh_urg) {
		return "[1;31m"
	} elsif ($time <= $thresh_warn) {
		return "[1;33m"
	} else {
		return ''
	}
}


$SIG{INT} = sub {
	print '[0m' . format_countdown($time) . "^C\n";
	exit;
};

while ($time > 0) {
	print color($time) . format_countdown($time);

	sleep 1;
	$time--;
}

print color($time) . format_countdown($time);
system sprintf 'notify-send "%s countdown finished!"', format_time($orig_time)
	if $do_notify;
print "\n";

